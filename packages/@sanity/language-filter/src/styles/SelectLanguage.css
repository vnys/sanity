@import 'part:@sanity/base/theme/variables-style';

.target {
  display: flex;
  align-items: center;
  color: var(--default-button-color);
  white-space: nowrap;
  align-self: center;
  border-radius: var(--button-border-radius);
  padding: var(--small-padding);
  cursor: default;

  @media (hover: hover) {
    @nest &:hover {
      background: color(var(--default-button-color) a(10%));
      color: color(var(--default-button-color) lightness(- 20%));
    }
  }

  @nest &[data-open='true'] {
    background: color(var(--selected-item-color) alpha(15%));
    color: var(--selected-item-color);
  }
}

.targetValue {
  font-size: var(--font-size-small);
  line-height: var(--line-height-small);

  /* Optical alignment */
  padding: 0 0 1px;
}

.targetIcon {
  margin-left: var(--extra-small-padding);

  @nest & svg {
    display: block;
    font-size: calc(15 / 16 * 1em);
    margin: 1px 0;

    &[data-sanity-icon='true'] {
      font-size: calc(21 / 16 * 1em);
      margin: calc(2 / 21 * -1em);
    }
  }
}

.root {
  background-color: var(--component-bg);
  color: var(--text-color);
  composes: shadow-6dp from 'part:@sanity/base/theme/shadows-style';
  user-select: none;
  text-align: left;
  overflow: auto;
  overflow-x: hidden;
  padding: var(--extra-small-padding) 0;
  border-radius: var(--border-radius-small);
  max-height: calc(100vh - 140px);
}

.list {
  composes: resetList from 'part:@sanity/base/theme/layout/helpers';
}

.functions {
  padding: var(--small-padding) calc(var(--medium-padding) - var(--extra-small-padding));

  @nest & > button {
    width: 100%;
  }
}

.selectedNumFilter {
  color: var(--state-danger-color);
  font-weight: bold;
}

.item {
  padding: var(--small-padding) calc(var(--medium-padding) - var(--extra-small-padding));
  composes: resetListItem from 'part:@sanity/base/theme/layout/helpers';
  composes: item from 'part:@sanity/base/theme/layout/selectable-style';
  white-space: nowrap;
}
