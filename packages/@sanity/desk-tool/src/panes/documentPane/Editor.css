@import 'part:@sanity/base/theme/variables-style';

.root {
  max-width: calc(640px + var(--medium-padding) + var(--medium-padding));
  flex-grow: 1;
  margin: 0 auto;
}

.error,
.deletedDocument,
.unknownSchemaType {
  composes: flexCenter from 'part:@sanity/base/theme/layout/positioning-style';
}

.errorInner,
.deletedDocumentInner,
.unknownSchemaTypeInner {
  padding: var(--medium-padding);
}

.errorDetails {
  width: 100%;
  margin-top: 1em;
  height: 10em;
  white-space: pre;
  background: transparent;
  border: 0;
  padding: var(--small-padding) 0;
  font-size: var(--font-size-tiny);
  font-size: var(--line-height-tiny);
  font-family: var(--font-family-monospace);
}

.jsonDump {
  white-space: pre-wrap;
  padding: var(--medium-padding);
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.paneWrapper {
  @media (--screen-medium) {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    height: 100%;
    width: 100%;
  }
}

.paneWrapperWithHistory {
  composes: paneWrapper;

  @media (--screen-medium) {
    justify-content: stretch;
    display: flex;
  }
}

.pane {
  display: block;
  position: relative; /* Needed to keep the spinners in place */

  @media (--screen-medium) {
    background-color: transparent;
    height: 100%;
  }
}

.loading {
  min-height: 100%;
}

.footer {
  display: flex;
  max-width: 640px;
}

.footerStatus {
  flex: 1;
  color: var(--text-color-secondary);
}

.publishInfo {
  background: #fed;
}

.publishButton {
  display: block;
  grid-area: publishButton;
  justify-self: stretch;
  width: stretch;

  @nest & > * {
    display: flex;
    width: 100%;
  }
}

.publishInfoUndoButton {
  position: relative;
  grid-area: publishInfoUndoButton;
  min-width: fit-content;

  @nest & > * {
    display: flex;
    width: 100%;
  }
}

.popOverText {
  font-size: var(--font-size-base);
  line-height: var(--line-height-base);
  margin-bottom: var(--medium-padding);
  text-align: center;
  max-width: 18em;
}

.errors {
  margin-left: var(--medium-padding);
  color: var(--state-danger-color);
}

.warnings {
  margin-left: var(--medium-padding);
  color: var(--state-warning-color);
}

.editor {
  padding: var(--medium-padding);
  padding-bottom: calc(var(--medium-padding) * 3);

  @media (--screen-medium) {
    padding: var(--extra-large-padding) var(--medium-padding);
    padding-bottom: calc(var(--large-padding) * 3);
  }
}

.overlay {
  position: absolute;
  background-color: rgba(255, 255, 255, 0.8);
  height: 100%;
  width: 100%;
  z-index: 200;
}

.typeMisMatchMessage {
  padding: 10em 3em;
}

.paneFunctions {
  display: flex;
  flex-wrap: nowrap;
  align-items: stretch;
  padding-right: 0;

  @media (--screen-medium) {
    font-size: var(--font-size-base);
    line-height: var(--line-height-base);
  }
}

.spinnerContainer {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 10;
  height: 100%;
  background-color: color(var(--component-bg) a(60%));

  @media (--screen-medium) {
    position: absolute;
    height: calc(100vh - 6rem); /* 6rem is aprox the height of the header stuff */
  }
}
