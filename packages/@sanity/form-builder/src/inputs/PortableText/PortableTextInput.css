@import 'part:@sanity/base/theme/variables-style';

.root {
  display: block;
  position: relative;
  width: 100%;
  box-sizing: border-box;
  font-family: var(--block-editor-base-font-family);
  margin: 0;
  padding: 0;
}

.fullscreenWrapper {
  position: fixed;
  top: 0;
  left: 0;
  z-index: var(--zindex-portal);
  background-color: var(--body-bg);
  margin-top: 4rem;
}

.scrollContainer {
  composes: scrollY from 'part:@sanity/base/theme/layout/scrolling-style';
  display: block;
  height: 15rem;
  border: 1px solid var(--input-border-color);
  border-radius: var(--input-border-radius);
  box-sizing: border-box;
  overflow-y: overlay;
  display: flex;
  flex-direction: column;
  flex-grow: 1;

  @nest &.hasBlockExtras::after {
    content: '';
    position: absolute;
    box-sizing: border-box;
    width: var(--block-extras-width);
    background-color: var(--block-extras-background-color);
    border-left: 1px solid var(--block-extras-border-color);
    top: 1px;
    right: 1px;
    height: calc(100% - 2px);
    z-index: -1;
  }

  @nest .fullscreenWrapper & {
    top: 0;
    left: 0;
    display: flex;
    height: calc(100vh - 4rem);
    width: 100vw;
    background-color: color(var(--body-bg) lightness(- 2%));
    background-image: unset;
    border: none;

    @nest &::before {
      display: none;
    }
  }

  @nest .focus:not(.fullscreenWrapper) & {
    border: 1px solid var(--input-border-color-focus);
    box-shadow: 0 0 8px color(var(--input-border-color-focus) a(35%));
  }
}

.editorWrapper {
  /* make it fill its parent */
  composes: shadow-6dp from 'part:@sanity/base/theme/shadows-style';
  box-sizing: border-box;
  height: auto;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
}

.fullscreen .editorWrapper {
  max-width: 50em;
  margin: 3rem auto;
  background-color: var(--input-bg);
  width: 95vw;
  box-sizing: border-box;
  margin-top: 5rem;

  @media (--screen-medium) {
    width: 90vw;
    margin: 5rem auto;
  }
}

.root :not(.fullscreen) .editorWrapper {
  box-shadow: none;
}

.activeOnFocus {
  @nest & > h3 {
    margin: 0;
    padding: 0;
    text-transform: uppercase;
    margin-bottom: var(--small-padding);
  }

  @nest & > div {
    margin: 0;
    padding: 0;
    text-transform: uppercase;
    margin-bottom: var(--small-padding);
  }

  @nest & > button {
    margin-bottom: var(--small-padding);
  }
}

.shortcutHint {
  font-size: var(--font-size-xsmall);
  color: var(--text-muted);
}

.keyboardShortcut {
  font-size: var(--font-size-xsmall);
  opacity: var(--gray-light);
  text-transform: none;
}

.loading {
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: #fff;
  z-index: 99999;
  opacity: 0.5;
}

/*
  The flex alignment here is to stretch the editor to
  fit its parrent, and to make the last child selectable for editing
*/

.editor {
  position: relative;
  box-sizing: border-box;
  font-family: var(--block-editor-base-font-family);
  width: 100%;
  min-height: 100%;
  margin: 0;
  padding: 0;
}

.editor.hasBlockExtras:not(.fullscreen) {
  padding-right: var(--block-extras-width);
}

/* less spacing on block objects / non-text objects */
.editor > div > div[data-slate-void='true'] + div[data-slate-void='true'] {
  padding-top: var(--small-padding);
}

.editor > div > * {
  position: relative;
  box-sizing: content-box;
  word-break: break-word;
  padding-left: var(--small-padding);
  padding-right: var(--small-padding);

  @media (--screen-medium) {
    padding-left: var(--medium-padding);
    padding-right: var(--medium-padding);
  }

  @nest .fullscreenWrapper & {
    padding-left: var(--small-padding);
    padding-right: var(--small-padding);

    @media (--screen-medium) {
      padding-left: var(--large-padding);
      padding-right: var(--large-padding);
    }

    @media (--screen-large) {
      padding-left: 4rem;
      padding-right: 4rem;
    }
  }
}

.editor > div > *:first-child {
  padding-top: var(--small-padding);

  @media (--screen-medium) {
    margin-top: var(--medium-padding);
  }

  @nest .fullscreenWrapper & {
    @media (--screen-medium) {
      margin-top: var(--large-padding);
    }

    @media (--screen-large) {
      margin-top: 4rem;
    }
  }
}

.editor > div {
  display: flex;
  flex-direction: column;
  height: 100%;
  min-height: 100%;
}

.editor > div > *:last-child {
  flex-grow: 1;
  @nest .fullscreenWrapper & {
    padding-bottom: 3rem;
  }
}


.blockExtras {
  position: relative;
  height: 100%;
  top: 0;
  left: 0;
  right: 0;
  pointer-events: none;
  @nest .fullscreen & {
    padding-left: 0;
  }
}
